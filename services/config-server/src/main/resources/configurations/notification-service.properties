server.port=8040
spring.data.mongodb.username=shweta
spring.data.mongodb.password=shweta
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=notification
spring.data.mongodb.authentication-database=admin

#kafka url:
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=paymentGroup,orderGroup
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#If we send a message type, say, orderConfirmation from a specific package,
#we will get an error saying that this is coming from an untrusted package,
#So, we need to tell kafka what are the trusted packages:
# (we can list all the trusted packages with comma separated packages)
spring.kafka.consumer.properties.spring.json.trusted.packages='*'
spring.kafka.consumer.properties.spring.json.type.mapping=orderConfirmation:com.app.kafka.order.OrderConfirmation,paymentConfirmation:com.app.kafka.payment.PaymentConfirmation
spring.mail.host=localhost
spring.mail.port=1025
spring.mail.username=shweta
spring.mail.properties.mail.smtp.trust='*'
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enabled=true
spring.mail.properties.mail.smtp.starttls.connectiontimeout=5000
spring.mail.properties.mail.smtp.starttls.writetimeout=5000
